/**
 * Definition for a binary tree node.
 * public class TreeNode {
 *     int val;
 *     TreeNode left;
 *     TreeNode right;
 *     TreeNode() {}
 *     TreeNode(int val) { this.val = val; }
 *     TreeNode(int val, TreeNode left, TreeNode right) {
 *         this.val = val;
 *         this.left = left;
 *         this.right = right;
 *     }
 * }
 */
class Solution {
    public TreeNode invertTree(TreeNode root) {
        if(root == null) {
            return null;
        }

       return inverTreeHelper(root);
    }

    private TreeNode inverTreeHelper(TreeNode node) {

        TreeNode leftSubTree = null;
        TreeNode rightSubTree = null;

        if(node.left == null && node.right == null) {
            return node;
        }

        if(node.left != null) {
          leftSubTree =  inverTreeHelper(node.left);
        }

        if(node.right != null) {
            rightSubTree =  inverTreeHelper(node.right);
        }

        node.left = rightSubTree;
        node.right =leftSubTree;

        return node;

    }
}